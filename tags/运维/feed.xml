<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>运维 on CodeG Blog</title>
    <link>http://blog.codeg.cn/tags/%E8%BF%90%E7%BB%B4/</link>
    <description>Recent content in 运维 on CodeG Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright (c) 2015. All rights reserved.</copyright>
    <lastBuildDate>Thu, 08 Oct 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://blog.codeg.cn/tags/%E8%BF%90%E7%BB%B4/feed/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ansible简介</title>
      <link>http://blog.codeg.cn/2015/10/08/ansible/</link>
      <pubDate>Thu, 08 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.codeg.cn/2015/10/08/ansible/</guid>
      <description>

&lt;h2 id=&#34;简介:f188025e536204472e8b7261593031f9&#34;&gt;简介&lt;/h2&gt;

&lt;p&gt;ansible是新出现的自动化运维工具，基于Python开发，集合了众多运维工具（puppet、cfengine、chef、func、fabric）的优点，实现了批量系统配置、批量程序部署、批量运行命令等功能。ansible是基于模块工作的，本身没有批量部署的能力。真正具有批量部署的是ansible所运行的模块，ansible只是提供一种框架。主要包括：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;连接插件connection plugins：负责和被监控端实现通信；&lt;/li&gt;
&lt;li&gt;host inventory：指定操作的主机，是一个配置文件里面定义监控的主机；&lt;/li&gt;
&lt;li&gt;各种模块核心模块、command模块、自定义模块；&lt;/li&gt;
&lt;li&gt;借助于插件完成记录日志邮件等功能；&lt;/li&gt;
&lt;li&gt;playbook：剧本执行多个任务时，非必需可以让节点一次性运行多个任务。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;在centos上安装:f188025e536204472e8b7261593031f9&#34;&gt;在centos上安装&lt;/h2&gt;

&lt;p&gt;直接使用yum安装即可： &lt;code&gt;sudo yum install ansible&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;简单使用:f188025e536204472e8b7261593031f9&#34;&gt;简单使用&lt;/h2&gt;

&lt;p&gt;其默认的配置路径： &lt;code&gt;/etc/ansible/ansible.cfg&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;为了避免SHH key host检查，可以将下面配置项打开：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;host_key_checking = False
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;另外，为避免一些依赖（依赖目标机器上的软件环境），可以使用 &lt;code&gt;-m raw&lt;/code&gt; 参数，例如下面是没有加这个参数时会出错：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ansible builddev -m shell -a &amp;quot;uname -a&amp;quot; -k       
SSH password: 
10.16.28.17 | FAILED &amp;gt;&amp;gt; {
    &amp;quot;failed&amp;quot;: true, 
    &amp;quot;msg&amp;quot;: &amp;quot;/usr/bin/python: not found\n&amp;quot;, 
    &amp;quot;parsed&amp;quot;: false
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;加上这个参数就没有问题： &lt;code&gt;ansible builddev -m shell -m raw -a &amp;quot;uname -a&amp;quot; -k&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;修改配置文件:f188025e536204472e8b7261593031f9&#34;&gt;修改配置文件&lt;/h3&gt;

&lt;p&gt;ansible使用配置文件 &lt;code&gt;/etc/ansible/hosts&lt;/code&gt; 。其格式如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
# This is the default ansible &#39;hosts&#39; file.
#
# It should live in /etc/ansible/hosts
#
#   - Comments begin with the &#39;#&#39; character
#   - Blank lines are ignored
#   - Groups of hosts are delimited by [header] elements
#   - You can enter hostnames or ip addresses
#   - A hostname/ip can be a member of multiple groups

# Ex 1: Ungrouped hosts, specify before any group headers.

green.example.com
blue.example.com
192.168.100.1
192.168.100.10

# Ex 2: A collection of hosts belonging to the &#39;webservers&#39; group

[webservers]
alpha.example.org
beta.example.org
192.168.1.100
192.168.1.110

# If you have multiple hosts following a pattern you can specify
# them like this:

www[001:006].example.com

# Ex 3: A collection of database servers in the &#39;dbservers&#39; group

[dbservers]

db01.intranet.mydomain.net
db02.intranet.mydomain.net
10.25.1.56
10.25.1.57

# Here&#39;s another example of host ranges, this time there are no
# leading 0s:

db-[99:101]-node.example.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我们编辑这个文件，删除原来所有的配置，然后增加一个group，最终完整文件内容如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[build]
10.16.29.179
10.16.28.17
10.16.28.18
10.16.29.88
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;使用:f188025e536204472e8b7261593031f9&#34;&gt;使用&lt;/h3&gt;

&lt;h4 id=&#34;示例1-ansible-build-a-date-k:f188025e536204472e8b7261593031f9&#34;&gt;示例1：ansible build -a date -k&lt;/h4&gt;

&lt;p&gt;该命令标示针对&lt;code&gt;build&lt;/code&gt;这一组机器，执行&lt;code&gt;date&lt;/code&gt;命令，&lt;code&gt;-k&lt;/code&gt;标示要使用ssh时提示密码输入符，&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[codeg@build ~]$ ansible build -a date -k       
SSH password: 

paramiko: The authenticity of host &#39;10.16.29.88&#39; can&#39;t be established.
The ssh-rsa key fingerprint is 3151f8e35301c476af609c3bb31b5e37.
Are you sure you want to continue connecting (yes/no)?
yes
10.16.28.18 | success | rc=0 &amp;gt;&amp;gt;
Thu Oct  8 11:43:49 CST 2015

10.16.29.179 | success | rc=0 &amp;gt;&amp;gt;
Thu Oct  8 11:50:14 CST 2015

10.16.28.17 | success | rc=0 &amp;gt;&amp;gt;
Thu Oct  8 11:50:14 CST 2015

10.16.29.88 | success | rc=0 &amp;gt;&amp;gt;
Thu Oct  8 11:50:18 CST 2015
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;示例2-执行复杂的命令-ansible-build-m-shell-a-ls-l-head-1-k:f188025e536204472e8b7261593031f9&#34;&gt;示例2，执行复杂的命令：ansible build -m shell -a &amp;ldquo;ls -l | head -1&amp;rdquo; -k&lt;/h4&gt;

&lt;p&gt;使用shell模块，表明是执行shell指令。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ansible build -m shell -a &amp;quot;ls -l | head -1&amp;quot; -k
SSH password: 
10.16.28.17 | success | rc=0 &amp;gt;&amp;gt;
total 454360

10.16.28.18 | success | rc=0 &amp;gt;&amp;gt;
total 33288

10.16.29.179 | success | rc=0 &amp;gt;&amp;gt;
total 87776

10.16.29.88 | success | rc=0 &amp;gt;&amp;gt;
total 469384ls: write error: Broken pipe
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;示例3-文件拷贝-ansible-build-m-copy-a-src-a-sh-dest-tmp-abcx-sh-k:f188025e536204472e8b7261593031f9&#34;&gt;示例3，文件拷贝：ansible build -m copy -a &amp;ldquo;src=a.sh dest=/tmp/abcx.sh&amp;rdquo; -k&lt;/h4&gt;

&lt;p&gt;使用&lt;code&gt;copy&lt;/code&gt;模块来传输文件，通过src/dest两个参数来指定原始文件和目标机的目的地址。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ansible build -m copy -a &amp;quot;src=a.sh dest=/tmp/abcx.sh&amp;quot; -k  
SSH password: 
10.16.28.18 | success &amp;gt;&amp;gt; {
    &amp;quot;changed&amp;quot;: true, 
    &amp;quot;checksum&amp;quot;: &amp;quot;b9da991c935ccdda2231e2a3704ef943035dd4d4&amp;quot;, 
    &amp;quot;dest&amp;quot;: &amp;quot;/tmp/abcx.sh&amp;quot;, 
    &amp;quot;gid&amp;quot;: 3534, 
    &amp;quot;group&amp;quot;: &amp;quot;codeg&amp;quot;, 
    &amp;quot;md5sum&amp;quot;: &amp;quot;1506d51353f96a582b86891999e63091&amp;quot;, 
    &amp;quot;mode&amp;quot;: &amp;quot;0664&amp;quot;, 
    &amp;quot;owner&amp;quot;: &amp;quot;codeg&amp;quot;, 
    &amp;quot;size&amp;quot;: 61, 
    &amp;quot;src&amp;quot;: &amp;quot;/home/codeg/.ansible/tmp/ansible-tmp-1444292722.63-246642726358339/source&amp;quot;, 
    &amp;quot;state&amp;quot;: &amp;quot;file&amp;quot;, 
    &amp;quot;uid&amp;quot;: 3534
}

10.16.28.17 | success &amp;gt;&amp;gt; {
    &amp;quot;changed&amp;quot;: true, 
    &amp;quot;checksum&amp;quot;: &amp;quot;b9da991c935ccdda2231e2a3704ef943035dd4d4&amp;quot;, 
    &amp;quot;dest&amp;quot;: &amp;quot;/tmp/abcx.sh&amp;quot;, 
    &amp;quot;gid&amp;quot;: 3534, 
    &amp;quot;group&amp;quot;: &amp;quot;codeg&amp;quot;, 
    &amp;quot;md5sum&amp;quot;: &amp;quot;1506d51353f96a582b86891999e63091&amp;quot;, 
    &amp;quot;mode&amp;quot;: &amp;quot;0664&amp;quot;, 
    &amp;quot;owner&amp;quot;: &amp;quot;codeg&amp;quot;, 
    &amp;quot;size&amp;quot;: 61, 
    &amp;quot;src&amp;quot;: &amp;quot;/home/codeg/.ansible/tmp/ansible-tmp-1444292722.67-256074204427798/source&amp;quot;, 
    &amp;quot;state&amp;quot;: &amp;quot;file&amp;quot;, 
    &amp;quot;uid&amp;quot;: 3534
}

10.16.29.88 | success &amp;gt;&amp;gt; {
    &amp;quot;changed&amp;quot;: true, 
    &amp;quot;checksum&amp;quot;: &amp;quot;b9da991c935ccdda2231e2a3704ef943035dd4d4&amp;quot;, 
    &amp;quot;dest&amp;quot;: &amp;quot;/tmp/abcx.sh&amp;quot;, 
    &amp;quot;gid&amp;quot;: 3534, 
    &amp;quot;group&amp;quot;: &amp;quot;codeg&amp;quot;, 
    &amp;quot;md5sum&amp;quot;: &amp;quot;1506d51353f96a582b86891999e63091&amp;quot;, 
    &amp;quot;mode&amp;quot;: &amp;quot;0664&amp;quot;, 
    &amp;quot;owner&amp;quot;: &amp;quot;codeg&amp;quot;, 
    &amp;quot;size&amp;quot;: 61, 
    &amp;quot;src&amp;quot;: &amp;quot;/home/codeg/.ansible/tmp/ansible-tmp-1444292722.64-195326527082374/source&amp;quot;, 
    &amp;quot;state&amp;quot;: &amp;quot;file&amp;quot;, 
    &amp;quot;uid&amp;quot;: 3534
}

10.16.29.179 | success &amp;gt;&amp;gt; {
    &amp;quot;changed&amp;quot;: true, 
    &amp;quot;checksum&amp;quot;: &amp;quot;b9da991c935ccdda2231e2a3704ef943035dd4d4&amp;quot;, 
    &amp;quot;dest&amp;quot;: &amp;quot;/tmp/abcx.sh&amp;quot;, 
    &amp;quot;gid&amp;quot;: 3534, 
    &amp;quot;group&amp;quot;: &amp;quot;codeg&amp;quot;, 
    &amp;quot;md5sum&amp;quot;: &amp;quot;1506d51353f96a582b86891999e63091&amp;quot;, 
    &amp;quot;mode&amp;quot;: &amp;quot;0664&amp;quot;, 
    &amp;quot;owner&amp;quot;: &amp;quot;codeg&amp;quot;, 
    &amp;quot;size&amp;quot;: 61, 
    &amp;quot;src&amp;quot;: &amp;quot;/home/codeg/.ansible/tmp/ansible-tmp-1444292722.68-230895291500491/source&amp;quot;, 
    &amp;quot;state&amp;quot;: &amp;quot;file&amp;quot;, 
    &amp;quot;uid&amp;quot;: 3534
}

$ ansible build -m shell -a &amp;quot;ls /tmp/abcx.sh&amp;quot; -k                   
SSH password: 
10.16.28.18 | success | rc=0 &amp;gt;&amp;gt;
/tmp/abcx.sh

10.16.28.17 | success | rc=0 &amp;gt;&amp;gt;
/tmp/abcx.sh

10.16.29.179 | success | rc=0 &amp;gt;&amp;gt;
/tmp/abcx.sh

10.16.29.88 | success | rc=0 &amp;gt;&amp;gt;
/tmp/abcx.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;示例4-批量拷贝文件:f188025e536204472e8b7261593031f9&#34;&gt;示例4，批量拷贝文件：&lt;/h4&gt;

&lt;p&gt;TODO&lt;/p&gt;

&lt;h3 id=&#34;参考文献:f188025e536204472e8b7261593031f9&#34;&gt;参考文献&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.ansible.com/&#34;&gt;官方文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://os.51cto.com/art/201409/451927_all.htm&#34; title=&#34;自动化运维工具之ansible&#34;&gt;自动化运维工具之ansible&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>