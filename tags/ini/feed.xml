<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ini on CodeG Blog</title>
    <link>http://blog.codeg.cn/tags/ini/</link>
    <description>Recent content in Ini on CodeG Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright (c) 2015. All rights reserved.</copyright>
    <lastBuildDate>Sun, 29 May 2016 13:14:00 +0000</lastBuildDate>
    <atom:link href="http://blog.codeg.cn/tags/ini/feed/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>发布一个Golang版本的INI解析器</title>
      <link>http://blog.codeg.cn/post/blog/2016-05-29-a-new-ini-parser-for-golang/</link>
      <pubDate>Sun, 29 May 2016 13:14:00 +0000</pubDate>
      
      <guid>http://blog.codeg.cn/post/blog/2016-05-29-a-new-ini-parser-for-golang/</guid>
      <description>

&lt;h2 id=&#34;goini:8fa3c65ec3a305344ff164eb6635eadc&#34;&gt;goini&lt;/h2&gt;

&lt;p&gt;这是一个为Golang开发的读取INI格式文件的库，它还能读取类似于INI格式的key/value对数据。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;goini&lt;/code&gt; 的设计目标是简单、灵活、高效，有如下特性：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;支持标准INI格式&lt;/li&gt;
&lt;li&gt;支持节&lt;/li&gt;
&lt;li&gt;支持从本地磁盘中读取INI文件&lt;/li&gt;
&lt;li&gt;支持从内存数据中读取INI数据&lt;/li&gt;
&lt;li&gt;支持解析形如INI格式的key/value对数据，分隔符可以自定义&lt;/li&gt;
&lt;li&gt;支持UTF8编码&lt;/li&gt;
&lt;li&gt;支持注释符 &lt;code&gt;;&lt;/code&gt; or &lt;code&gt;#&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;支持级联继承&lt;/li&gt;
&lt;li&gt;仅仅只依赖Golang标准库&lt;/li&gt;
&lt;li&gt;测试用户100%覆盖&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;使用时导入:8fa3c65ec3a305344ff164eb6635eadc&#34;&gt;使用时导入&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;import github.com/zieckey/goini
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;用法示例:8fa3c65ec3a305344ff164eb6635eadc&#34;&gt;用法示例&lt;/h2&gt;

&lt;h3 id=&#34;示例1-解析ini文件:8fa3c65ec3a305344ff164eb6635eadc&#34;&gt;示例1 : 解析INI文件&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import github.com/zieckey/goini

ini := goini.New()
err := ini.ParseFile(filename)
if err != nil {
	fmt.Printf(&amp;quot;parse INI file %v failed : %v\n&amp;quot;, filename, err.Error())
	return
}

v, ok := ini.Get(&amp;quot;the-key&amp;quot;)
//...
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;示例2-解析内存中形如ini格式的数据:8fa3c65ec3a305344ff164eb6635eadc&#34;&gt;示例2 ： 解析内存中形如INI格式的数据&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;raw := []byte(&amp;quot;a:av||b:bv||c:cv||||d:dv||||||&amp;quot;)
ini := goini.New()
err := ini.Parse(raw, &amp;quot;||&amp;quot;, &amp;quot;:&amp;quot;)
if err != nil {
    fmt.Printf(&amp;quot;parse INI memory data failed : %v\n&amp;quot;, err.Error())
    return
}

key := &amp;quot;a&amp;quot;
v, ok := ini.Get(key)
if ok {
    fmt.Printf(&amp;quot;The value of %v is [%v]\n&amp;quot;, key, v) // Output : The value of a is [av]
}

key = &amp;quot;c&amp;quot;
v, ok = ini.Get(key)
if ok {
    fmt.Printf(&amp;quot;The value of %v is [%v]\n&amp;quot;, key, v) // Output : The value of c is [cv]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;示例3-解析级联继承ini文件:8fa3c65ec3a305344ff164eb6635eadc&#34;&gt;示例3 : 解析级联继承INI文件&lt;/h3&gt;

&lt;p&gt;假设我们有一个项目，该项目会部署到多个不同的生产环境中，每一个生产环境的配置都不尽相同，一般情况下，就得为每一个环境分别管理其各自的配置。
为了简化配置，我们抽取各个生产环境中配置的公共部分形成一个 &lt;code&gt;common.ini&lt;/code&gt;, 然后让每个生产环境的配置从这个INI配置文件继承，
这样就可以大大简化配置文件的维护工作。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;common.ini&lt;/code&gt; 举例如下:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;product=common
combo=common
debug=0

version=0.0.0.0
encoding=0

[sss]
a = aval
b = bval
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;项目 &lt;code&gt;project1.ini&lt;/code&gt; 从 &lt;code&gt;common.ini&lt;/code&gt; 继承而来，如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;inherited_from=common.ini

;the following config will override the values inherited from common.ini
product=project1
combo=test
debug=1

local=0
mid=c4ca4238a0b923820dcc509a6f75849b

[sss]
a = project1-aval
c = project1-cval
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个说话，我们使用 &lt;code&gt;goini.LoadInheritedINI(&amp;quot;project1.ini&amp;quot;)&lt;/code&gt; 来解析这个配置文件，其效果相当下面的INI配置：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;product=project1
combo=test
debug=1

local=0
mid=c4ca4238a0b923820dcc509a6f75849b

version=0.0.0.0
encoding=0

[sss]
a = project1-aval
c = project1-cval
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;参考:8fa3c65ec3a305344ff164eb6635eadc&#34;&gt;参考&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zieckey/goini&#34;&gt;项目源码 https://github.com/zieckey/goini&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>